/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGPointOfInterestCity.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGPointOfInterestCity::SWGPointOfInterestCity(QString* json) {
    init();
    this->fromJson(*json);
}

SWGPointOfInterestCity::SWGPointOfInterestCity() {
    init();
}

SWGPointOfInterestCity::~SWGPointOfInterestCity() {
    this->cleanup();
}

void
SWGPointOfInterestCity::init() {
    name = new QString("");
geoname_id = new QString("");
location = new SWGGeolocation();
total_points_of_interest = NULL;
}

void
SWGPointOfInterestCity::cleanup() {
    if(name != NULL) {
        delete name;
    }
if(geoname_id != NULL) {
        delete geoname_id;
    }
if(location != NULL) {
        delete location;
    }

}

SWGPointOfInterestCity*
SWGPointOfInterestCity::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGPointOfInterestCity::fromJsonObject(QJsonObject &pJson) {
    setValue(&name, pJson["name"], "QString", "QString");
setValue(&geoname_id, pJson["geoname_id"], "QString", "QString");
setValue(&location, pJson["location"], "SWGGeolocation", "SWGGeolocation");
setValue(&total_points_of_interest, pJson["total_points_of_interest"], "qint32", "");
}

QString
SWGPointOfInterestCity::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGPointOfInterestCity::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("name"), name, obj, QString("QString"));
    
        

    
    toJsonValue(QString("geoname_id"), geoname_id, obj, QString("QString"));
    
        

    
    toJsonValue(QString("location"), location, obj, QString("SWGGeolocation"));
    
        
obj->insert("total_points_of_interest", QJsonValue(total_points_of_interest));

    return obj;
}

QString*
SWGPointOfInterestCity::getName() {
    return name;
}
void
SWGPointOfInterestCity::setName(QString* name) {
    this->name = name;
}

QString*
SWGPointOfInterestCity::getGeonameId() {
    return geoname_id;
}
void
SWGPointOfInterestCity::setGeonameId(QString* geoname_id) {
    this->geoname_id = geoname_id;
}

SWGGeolocation*
SWGPointOfInterestCity::getLocation() {
    return location;
}
void
SWGPointOfInterestCity::setLocation(SWGGeolocation* location) {
    this->location = location;
}

qint32
SWGPointOfInterestCity::getTotalPointsOfInterest() {
    return total_points_of_interest;
}
void
SWGPointOfInterestCity::setTotalPointsOfInterest(qint32 total_points_of_interest) {
    this->total_points_of_interest = total_points_of_interest;
}



} /* namespace Swagger */

