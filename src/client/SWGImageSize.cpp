/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGImageSize.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGImageSize::SWGImageSize(QString* json) {
    init();
    this->fromJson(*json);
}

SWGImageSize::SWGImageSize() {
    init();
}

SWGImageSize::~SWGImageSize() {
    this->cleanup();
}

void
SWGImageSize::init() {
    small = new SWGImage();
medium = new SWGImage();
large = new SWGImage();
hd = new SWGImage();
}

void
SWGImageSize::cleanup() {
    if(small != NULL) {
        delete small;
    }
if(medium != NULL) {
        delete medium;
    }
if(large != NULL) {
        delete large;
    }
if(hd != NULL) {
        delete hd;
    }
}

SWGImageSize*
SWGImageSize::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGImageSize::fromJsonObject(QJsonObject &pJson) {
    setValue(&small, pJson["small"], "SWGImage", "SWGImage");
setValue(&medium, pJson["medium"], "SWGImage", "SWGImage");
setValue(&large, pJson["large"], "SWGImage", "SWGImage");
setValue(&hd, pJson["hd"], "SWGImage", "SWGImage");
}

QString
SWGImageSize::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGImageSize::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("small"), small, obj, QString("SWGImage"));
    
        

    
    toJsonValue(QString("medium"), medium, obj, QString("SWGImage"));
    
        

    
    toJsonValue(QString("large"), large, obj, QString("SWGImage"));
    
        

    
    toJsonValue(QString("hd"), hd, obj, QString("SWGImage"));
    
        

    return obj;
}

SWGImage*
SWGImageSize::getSmall() {
    return small;
}
void
SWGImageSize::setSmall(SWGImage* small) {
    this->small = small;
}

SWGImage*
SWGImageSize::getMedium() {
    return medium;
}
void
SWGImageSize::setMedium(SWGImage* medium) {
    this->medium = medium;
}

SWGImage*
SWGImageSize::getLarge() {
    return large;
}
void
SWGImageSize::setLarge(SWGImage* large) {
    this->large = large;
}

SWGImage*
SWGImageSize::getHd() {
    return hd;
}
void
SWGImageSize::setHd(SWGImage* hd) {
    this->hd = hd;
}



} /* namespace Swagger */

