/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGAddress.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGAddress::SWGAddress(QString* json) {
    init();
    this->fromJson(*json);
}

SWGAddress::SWGAddress() {
    init();
}

SWGAddress::~SWGAddress() {
    this->cleanup();
}

void
SWGAddress::init() {
    line1 = new QString("");
city = new QString("");
region = new QString("");
postal_code = new QString("");
country = new QString("");
}

void
SWGAddress::cleanup() {
    if(line1 != NULL) {
        delete line1;
    }
if(city != NULL) {
        delete city;
    }
if(region != NULL) {
        delete region;
    }
if(postal_code != NULL) {
        delete postal_code;
    }
if(country != NULL) {
        delete country;
    }
}

SWGAddress*
SWGAddress::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGAddress::fromJsonObject(QJsonObject &pJson) {
    setValue(&line1, pJson["line1"], "QString", "QString");
setValue(&city, pJson["city"], "QString", "QString");
setValue(&region, pJson["region"], "QString", "QString");
setValue(&postal_code, pJson["postal_code"], "QString", "QString");
setValue(&country, pJson["country"], "QString", "QString");
}

QString
SWGAddress::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGAddress::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("line1"), line1, obj, QString("QString"));
    
        

    
    toJsonValue(QString("city"), city, obj, QString("QString"));
    
        

    
    toJsonValue(QString("region"), region, obj, QString("QString"));
    
        

    
    toJsonValue(QString("postal_code"), postal_code, obj, QString("QString"));
    
        

    
    toJsonValue(QString("country"), country, obj, QString("QString"));
    
        

    return obj;
}

QString*
SWGAddress::getLine1() {
    return line1;
}
void
SWGAddress::setLine1(QString* line1) {
    this->line1 = line1;
}

QString*
SWGAddress::getCity() {
    return city;
}
void
SWGAddress::setCity(QString* city) {
    this->city = city;
}

QString*
SWGAddress::getRegion() {
    return region;
}
void
SWGAddress::setRegion(QString* region) {
    this->region = region;
}

QString*
SWGAddress::getPostalCode() {
    return postal_code;
}
void
SWGAddress::setPostalCode(QString* postal_code) {
    this->postal_code = postal_code;
}

QString*
SWGAddress::getCountry() {
    return country;
}
void
SWGAddress::setCountry(QString* country) {
    this->country = country;
}



} /* namespace Swagger */

