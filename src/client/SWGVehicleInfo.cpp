/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGVehicleInfo.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGVehicleInfo::SWGVehicleInfo(QString* json) {
    init();
    this->fromJson(*json);
}

SWGVehicleInfo::SWGVehicleInfo() {
    init();
}

SWGVehicleInfo::~SWGVehicleInfo() {
    this->cleanup();
}

void
SWGVehicleInfo::init() {
    acriss_code = new QString("");
category = new QString("");
type = new QString("");
transmission = new QString("");
air_conditioning = false;
fuel = new QString("");
}

void
SWGVehicleInfo::cleanup() {
    if(acriss_code != NULL) {
        delete acriss_code;
    }
if(category != NULL) {
        delete category;
    }
if(type != NULL) {
        delete type;
    }
if(transmission != NULL) {
        delete transmission;
    }

if(fuel != NULL) {
        delete fuel;
    }
}

SWGVehicleInfo*
SWGVehicleInfo::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGVehicleInfo::fromJsonObject(QJsonObject &pJson) {
    setValue(&acriss_code, pJson["acriss_code"], "QString", "QString");
setValue(&category, pJson["category"], "QString", "QString");
setValue(&type, pJson["type"], "QString", "QString");
setValue(&transmission, pJson["transmission"], "QString", "QString");
setValue(&air_conditioning, pJson["air_conditioning"], "bool", "");
setValue(&fuel, pJson["fuel"], "QString", "QString");
}

QString
SWGVehicleInfo::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGVehicleInfo::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("acriss_code"), acriss_code, obj, QString("QString"));
    
        

    
    toJsonValue(QString("category"), category, obj, QString("QString"));
    
        

    
    toJsonValue(QString("type"), type, obj, QString("QString"));
    
        

    
    toJsonValue(QString("transmission"), transmission, obj, QString("QString"));
    
        
obj->insert("air_conditioning", QJsonValue(air_conditioning));

    
    toJsonValue(QString("fuel"), fuel, obj, QString("QString"));
    
        

    return obj;
}

QString*
SWGVehicleInfo::getAcrissCode() {
    return acriss_code;
}
void
SWGVehicleInfo::setAcrissCode(QString* acriss_code) {
    this->acriss_code = acriss_code;
}

QString*
SWGVehicleInfo::getCategory() {
    return category;
}
void
SWGVehicleInfo::setCategory(QString* category) {
    this->category = category;
}

QString*
SWGVehicleInfo::getType() {
    return type;
}
void
SWGVehicleInfo::setType(QString* type) {
    this->type = type;
}

QString*
SWGVehicleInfo::getTransmission() {
    return transmission;
}
void
SWGVehicleInfo::setTransmission(QString* transmission) {
    this->transmission = transmission;
}

bool
SWGVehicleInfo::getAirConditioning() {
    return air_conditioning;
}
void
SWGVehicleInfo::setAirConditioning(bool air_conditioning) {
    this->air_conditioning = air_conditioning;
}

QString*
SWGVehicleInfo::getFuel() {
    return fuel;
}
void
SWGVehicleInfo::setFuel(QString* fuel) {
    this->fuel = fuel;
}



} /* namespace Swagger */

