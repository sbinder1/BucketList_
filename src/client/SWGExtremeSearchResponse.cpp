/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGExtremeSearchResponse.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGExtremeSearchResponse::SWGExtremeSearchResponse(QString* json) {
    init();
    this->fromJson(*json);
}

SWGExtremeSearchResponse::SWGExtremeSearchResponse() {
    init();
}

SWGExtremeSearchResponse::~SWGExtremeSearchResponse() {
    this->cleanup();
}

void
SWGExtremeSearchResponse::init() {
    origin = new QString("");
currency = new QString("");
results = new QList<SWGExtremeSearchResult*>();
}

void
SWGExtremeSearchResponse::cleanup() {
    if(origin != NULL) {
        delete origin;
    }
if(currency != NULL) {
        delete currency;
    }
if(results != NULL) {
        QList<SWGExtremeSearchResult*>* arr = results;
        foreach(SWGExtremeSearchResult* o, *arr) {
            delete o;
        }
        delete results;
    }
}

SWGExtremeSearchResponse*
SWGExtremeSearchResponse::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGExtremeSearchResponse::fromJsonObject(QJsonObject &pJson) {
    setValue(&origin, pJson["origin"], "QString", "QString");
setValue(&currency, pJson["currency"], "QString", "QString");
setValue(&results, pJson["results"], "QList", "SWGExtremeSearchResult");
}

QString
SWGExtremeSearchResponse::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGExtremeSearchResponse::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("origin"), origin, obj, QString("QString"));
    
        

    
    toJsonValue(QString("currency"), currency, obj, QString("QString"));
    
        

    
    QList<SWGExtremeSearchResult*>* resultsList = results;
    QJsonArray resultsJsonArray;
    toJsonArray((QList<void*>*)results, &resultsJsonArray, "results", "SWGExtremeSearchResult");

    obj->insert("results", resultsJsonArray);
    

    return obj;
}

QString*
SWGExtremeSearchResponse::getOrigin() {
    return origin;
}
void
SWGExtremeSearchResponse::setOrigin(QString* origin) {
    this->origin = origin;
}

QString*
SWGExtremeSearchResponse::getCurrency() {
    return currency;
}
void
SWGExtremeSearchResponse::setCurrency(QString* currency) {
    this->currency = currency;
}

QList<SWGExtremeSearchResult*>*
SWGExtremeSearchResponse::getResults() {
    return results;
}
void
SWGExtremeSearchResponse::setResults(QList<SWGExtremeSearchResult*>* results) {
    this->results = results;
}



} /* namespace Swagger */

