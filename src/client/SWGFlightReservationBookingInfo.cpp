/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGFlightReservationBookingInfo.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGFlightReservationBookingInfo::SWGFlightReservationBookingInfo(QString* json) {
    init();
    this->fromJson(*json);
}

SWGFlightReservationBookingInfo::SWGFlightReservationBookingInfo() {
    init();
}

SWGFlightReservationBookingInfo::~SWGFlightReservationBookingInfo() {
    this->cleanup();
}

void
SWGFlightReservationBookingInfo::init() {
    travel_class = new QString("");
booking_code = new QString("");
airline_record_locator = new QString("");
status = new QString("");
}

void
SWGFlightReservationBookingInfo::cleanup() {
    if(travel_class != NULL) {
        delete travel_class;
    }
if(booking_code != NULL) {
        delete booking_code;
    }
if(airline_record_locator != NULL) {
        delete airline_record_locator;
    }
if(status != NULL) {
        delete status;
    }
}

SWGFlightReservationBookingInfo*
SWGFlightReservationBookingInfo::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGFlightReservationBookingInfo::fromJsonObject(QJsonObject &pJson) {
    setValue(&travel_class, pJson["travel_class"], "QString", "QString");
setValue(&booking_code, pJson["booking_code"], "QString", "QString");
setValue(&airline_record_locator, pJson["airline_record_locator"], "QString", "QString");
setValue(&status, pJson["status"], "QString", "QString");
}

QString
SWGFlightReservationBookingInfo::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGFlightReservationBookingInfo::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("travel_class"), travel_class, obj, QString("QString"));
    
        

    
    toJsonValue(QString("booking_code"), booking_code, obj, QString("QString"));
    
        

    
    toJsonValue(QString("airline_record_locator"), airline_record_locator, obj, QString("QString"));
    
        

    
    toJsonValue(QString("status"), status, obj, QString("QString"));
    
        

    return obj;
}

QString*
SWGFlightReservationBookingInfo::getTravelClass() {
    return travel_class;
}
void
SWGFlightReservationBookingInfo::setTravelClass(QString* travel_class) {
    this->travel_class = travel_class;
}

QString*
SWGFlightReservationBookingInfo::getBookingCode() {
    return booking_code;
}
void
SWGFlightReservationBookingInfo::setBookingCode(QString* booking_code) {
    this->booking_code = booking_code;
}

QString*
SWGFlightReservationBookingInfo::getAirlineRecordLocator() {
    return airline_record_locator;
}
void
SWGFlightReservationBookingInfo::setAirlineRecordLocator(QString* airline_record_locator) {
    this->airline_record_locator = airline_record_locator;
}

QString*
SWGFlightReservationBookingInfo::getStatus() {
    return status;
}
void
SWGFlightReservationBookingInfo::setStatus(QString* status) {
    this->status = status;
}



} /* namespace Swagger */

