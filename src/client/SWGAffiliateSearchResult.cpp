/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGAffiliateSearchResult.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGAffiliateSearchResult::SWGAffiliateSearchResult(QString* json) {
    init();
    this->fromJson(*json);
}

SWGAffiliateSearchResult::SWGAffiliateSearchResult() {
    init();
}

SWGAffiliateSearchResult::~SWGAffiliateSearchResult() {
    this->cleanup();
}

void
SWGAffiliateSearchResult::init() {
    outbound = new SWGFlightSearchBound();
inbound = new SWGFlightSearchBound();
fare = new SWGAffiliateFlightSearchPrice();
payout = new SWGAffiliatePayout();
airline = new QString("");
deep_link = new QString("");
}

void
SWGAffiliateSearchResult::cleanup() {
    if(outbound != NULL) {
        delete outbound;
    }
if(inbound != NULL) {
        delete inbound;
    }
if(fare != NULL) {
        delete fare;
    }
if(payout != NULL) {
        delete payout;
    }
if(airline != NULL) {
        delete airline;
    }
if(deep_link != NULL) {
        delete deep_link;
    }
}

SWGAffiliateSearchResult*
SWGAffiliateSearchResult::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGAffiliateSearchResult::fromJsonObject(QJsonObject &pJson) {
    setValue(&outbound, pJson["outbound"], "SWGFlightSearchBound", "SWGFlightSearchBound");
setValue(&inbound, pJson["inbound"], "SWGFlightSearchBound", "SWGFlightSearchBound");
setValue(&fare, pJson["fare"], "SWGAffiliateFlightSearchPrice", "SWGAffiliateFlightSearchPrice");
setValue(&payout, pJson["payout"], "SWGAffiliatePayout", "SWGAffiliatePayout");
setValue(&airline, pJson["airline"], "QString", "QString");
setValue(&deep_link, pJson["deep_link"], "QString", "QString");
}

QString
SWGAffiliateSearchResult::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGAffiliateSearchResult::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("outbound"), outbound, obj, QString("SWGFlightSearchBound"));
    
        

    
    toJsonValue(QString("inbound"), inbound, obj, QString("SWGFlightSearchBound"));
    
        

    
    toJsonValue(QString("fare"), fare, obj, QString("SWGAffiliateFlightSearchPrice"));
    
        

    
    toJsonValue(QString("payout"), payout, obj, QString("SWGAffiliatePayout"));
    
        

    
    toJsonValue(QString("airline"), airline, obj, QString("QString"));
    
        

    
    toJsonValue(QString("deep_link"), deep_link, obj, QString("QString"));
    
        

    return obj;
}

SWGFlightSearchBound*
SWGAffiliateSearchResult::getOutbound() {
    return outbound;
}
void
SWGAffiliateSearchResult::setOutbound(SWGFlightSearchBound* outbound) {
    this->outbound = outbound;
}

SWGFlightSearchBound*
SWGAffiliateSearchResult::getInbound() {
    return inbound;
}
void
SWGAffiliateSearchResult::setInbound(SWGFlightSearchBound* inbound) {
    this->inbound = inbound;
}

SWGAffiliateFlightSearchPrice*
SWGAffiliateSearchResult::getFare() {
    return fare;
}
void
SWGAffiliateSearchResult::setFare(SWGAffiliateFlightSearchPrice* fare) {
    this->fare = fare;
}

SWGAffiliatePayout*
SWGAffiliateSearchResult::getPayout() {
    return payout;
}
void
SWGAffiliateSearchResult::setPayout(SWGAffiliatePayout* payout) {
    this->payout = payout;
}

QString*
SWGAffiliateSearchResult::getAirline() {
    return airline;
}
void
SWGAffiliateSearchResult::setAirline(QString* airline) {
    this->airline = airline;
}

QString*
SWGAffiliateSearchResult::getDeepLink() {
    return deep_link;
}
void
SWGAffiliateSearchResult::setDeepLink(QString* deep_link) {
    this->deep_link = deep_link;
}



} /* namespace Swagger */

