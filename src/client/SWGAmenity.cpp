/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGAmenity.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGAmenity::SWGAmenity(QString* json) {
    init();
    this->fromJson(*json);
}

SWGAmenity::SWGAmenity() {
    init();
}

SWGAmenity::~SWGAmenity() {
    this->cleanup();
}

void
SWGAmenity::init() {
    amenity = new QString("");
ota_code = new QString("");
description = new QString("");
}

void
SWGAmenity::cleanup() {
    if(amenity != NULL) {
        delete amenity;
    }
if(ota_code != NULL) {
        delete ota_code;
    }
if(description != NULL) {
        delete description;
    }
}

SWGAmenity*
SWGAmenity::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGAmenity::fromJsonObject(QJsonObject &pJson) {
    setValue(&amenity, pJson["amenity"], "QString", "QString");
setValue(&ota_code, pJson["ota_code"], "QString", "QString");
setValue(&description, pJson["description"], "QString", "QString");
}

QString
SWGAmenity::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGAmenity::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("amenity"), amenity, obj, QString("QString"));
    
        

    
    toJsonValue(QString("ota_code"), ota_code, obj, QString("QString"));
    
        

    
    toJsonValue(QString("description"), description, obj, QString("QString"));
    
        

    return obj;
}

QString*
SWGAmenity::getAmenity() {
    return amenity;
}
void
SWGAmenity::setAmenity(QString* amenity) {
    this->amenity = amenity;
}

QString*
SWGAmenity::getOtaCode() {
    return ota_code;
}
void
SWGAmenity::setOtaCode(QString* ota_code) {
    this->ota_code = ota_code;
}

QString*
SWGAmenity::getDescription() {
    return description;
}
void
SWGAmenity::setDescription(QString* description) {
    this->description = description;
}



} /* namespace Swagger */

