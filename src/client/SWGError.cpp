/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGError.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGError::SWGError(QString* json) {
    init();
    this->fromJson(*json);
}

SWGError::SWGError() {
    init();
}

SWGError::~SWGError() {
    this->cleanup();
}

void
SWGError::init() {
    status = NULL;
message = new QString("");
more_info = new QString("");
}

void
SWGError::cleanup() {
    
if(message != NULL) {
        delete message;
    }
if(more_info != NULL) {
        delete more_info;
    }
}

SWGError*
SWGError::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGError::fromJsonObject(QJsonObject &pJson) {
    setValue(&status, pJson["status"], "qint32", "");
setValue(&message, pJson["message"], "QString", "QString");
setValue(&more_info, pJson["more_info"], "QString", "QString");
}

QString
SWGError::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGError::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    obj->insert("status", QJsonValue(status));

    
    toJsonValue(QString("message"), message, obj, QString("QString"));
    
        

    
    toJsonValue(QString("more_info"), more_info, obj, QString("QString"));
    
        

    return obj;
}

qint32
SWGError::getStatus() {
    return status;
}
void
SWGError::setStatus(qint32 status) {
    this->status = status;
}

QString*
SWGError::getMessage() {
    return message;
}
void
SWGError::setMessage(QString* message) {
    this->message = message;
}

QString*
SWGError::getMoreInfo() {
    return more_info;
}
void
SWGError::setMoreInfo(QString* more_info) {
    this->more_info = more_info;
}



} /* namespace Swagger */

