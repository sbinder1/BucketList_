/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGContact.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGContact::SWGContact(QString* json) {
    init();
    this->fromJson(*json);
}

SWGContact::SWGContact() {
    init();
}

SWGContact::~SWGContact() {
    this->cleanup();
}

void
SWGContact::init() {
    type = new QString("");
purpose = new QString("");
detail = new QString("");
}

void
SWGContact::cleanup() {
    if(type != NULL) {
        delete type;
    }
if(purpose != NULL) {
        delete purpose;
    }
if(detail != NULL) {
        delete detail;
    }
}

SWGContact*
SWGContact::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGContact::fromJsonObject(QJsonObject &pJson) {
    setValue(&type, pJson["type"], "QString", "QString");
setValue(&purpose, pJson["purpose"], "QString", "QString");
setValue(&detail, pJson["detail"], "QString", "QString");
}

QString
SWGContact::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGContact::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("type"), type, obj, QString("QString"));
    
        

    
    toJsonValue(QString("purpose"), purpose, obj, QString("QString"));
    
        

    
    toJsonValue(QString("detail"), detail, obj, QString("QString"));
    
        

    return obj;
}

QString*
SWGContact::getType() {
    return type;
}
void
SWGContact::setType(QString* type) {
    this->type = type;
}

QString*
SWGContact::getPurpose() {
    return purpose;
}
void
SWGContact::setPurpose(QString* purpose) {
    this->purpose = purpose;
}

QString*
SWGContact::getDetail() {
    return detail;
}
void
SWGContact::setDetail(QString* detail) {
    this->detail = detail;
}



} /* namespace Swagger */

