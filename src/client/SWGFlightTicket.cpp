/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGFlightTicket.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGFlightTicket::SWGFlightTicket(QString* json) {
    init();
    this->fromJson(*json);
}

SWGFlightTicket::SWGFlightTicket() {
    init();
}

SWGFlightTicket::~SWGFlightTicket() {
    this->cleanup();
}

void
SWGFlightTicket::init() {
    id = new QString("");
price = new SWGAmount();
traveler_ids = new QList<QString*>();
flight_bounds = new QList<SWGFlightReservationBound*>();
}

void
SWGFlightTicket::cleanup() {
    if(id != NULL) {
        delete id;
    }
if(price != NULL) {
        delete price;
    }
if(traveler_ids != NULL) {
        QList<QString*>* arr = traveler_ids;
        foreach(QString* o, *arr) {
            delete o;
        }
        delete traveler_ids;
    }
if(flight_bounds != NULL) {
        QList<SWGFlightReservationBound*>* arr = flight_bounds;
        foreach(SWGFlightReservationBound* o, *arr) {
            delete o;
        }
        delete flight_bounds;
    }
}

SWGFlightTicket*
SWGFlightTicket::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGFlightTicket::fromJsonObject(QJsonObject &pJson) {
    setValue(&id, pJson["id"], "QString", "QString");
setValue(&price, pJson["price"], "SWGAmount", "SWGAmount");
setValue(&traveler_ids, pJson["traveler_ids"], "QList", "QString");
setValue(&flight_bounds, pJson["flight_bounds"], "QList", "SWGFlightReservationBound");
}

QString
SWGFlightTicket::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGFlightTicket::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("id"), id, obj, QString("QString"));
    
        

    
    toJsonValue(QString("price"), price, obj, QString("SWGAmount"));
    
        

    
    QList<QString*>* traveler_idsList = traveler_ids;
    QJsonArray traveler_idsJsonArray;
    toJsonArray((QList<void*>*)traveler_ids, &traveler_idsJsonArray, "traveler_ids", "QString");

    obj->insert("traveler_ids", traveler_idsJsonArray);
    

    
    QList<SWGFlightReservationBound*>* flight_boundsList = flight_bounds;
    QJsonArray flight_boundsJsonArray;
    toJsonArray((QList<void*>*)flight_bounds, &flight_boundsJsonArray, "flight_bounds", "SWGFlightReservationBound");

    obj->insert("flight_bounds", flight_boundsJsonArray);
    

    return obj;
}

QString*
SWGFlightTicket::getId() {
    return id;
}
void
SWGFlightTicket::setId(QString* id) {
    this->id = id;
}

SWGAmount*
SWGFlightTicket::getPrice() {
    return price;
}
void
SWGFlightTicket::setPrice(SWGAmount* price) {
    this->price = price;
}

QList<QString*>*
SWGFlightTicket::getTravelerIds() {
    return traveler_ids;
}
void
SWGFlightTicket::setTravelerIds(QList<QString*>* traveler_ids) {
    this->traveler_ids = traveler_ids;
}

QList<SWGFlightReservationBound*>*
SWGFlightTicket::getFlightBounds() {
    return flight_bounds;
}
void
SWGFlightTicket::setFlightBounds(QList<SWGFlightReservationBound*>* flight_bounds) {
    this->flight_bounds = flight_bounds;
}



} /* namespace Swagger */

