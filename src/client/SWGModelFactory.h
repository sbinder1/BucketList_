/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef ModelFactory_H_
#define ModelFactory_H_


#include "SWGAddress.h"
#include "SWGAffiliateFlightSearchPrice.h"
#include "SWGAffiliatePayout.h"
#include "SWGAffiliateSearchMeta.h"
#include "SWGAffiliateSearchResponse.h"
#include "SWGAffiliateSearchResult.h"
#include "SWGAirport.h"
#include "SWGAirportAutocompleteResponse.h"
#include "SWGAirportInformation.h"
#include "SWGAmenity.h"
#include "SWGAmount.h"
#include "SWGAward.h"
#include "SWGCarReservation.h"
#include "SWGCarReservationBookingInfo.h"
#include "SWGCarSearchResponse.h"
#include "SWGCarSearchResult.h"
#include "SWGCarrierInfo.h"
#include "SWGCarrierMeta.h"
#include "SWGCityInformation.h"
#include "SWGCompany.h"
#include "SWGContact.h"
#include "SWGError.h"
#include "SWGExtensiveTrainSearchResponse.h"
#include "SWGExtensiveTrainSearchResult.h"
#include "SWGExtremeSearchResponse.h"
#include "SWGExtremeSearchResult.h"
#include "SWGFare.h"
#include "SWGFareRestrictions.h"
#include "SWGFees.h"
#include "SWGFlightReservationBookingInfo.h"
#include "SWGFlightReservationBound.h"
#include "SWGFlightReservationSegment.h"
#include "SWGFlightSearchBookingInfo.h"
#include "SWGFlightSearchBound.h"
#include "SWGFlightSearchItinerary.h"
#include "SWGFlightSearchPrice.h"
#include "SWGFlightSearchSegment.h"
#include "SWGFlightTicket.h"
#include "SWGFlightTrafficSearchResponse.h"
#include "SWGFlightTrafficSearchResult.h"
#include "SWGFrequentTravelerCard.h"
#include "SWGGeolocation.h"
#include "SWGHotelPropertyResponse.h"
#include "SWGHotelReservation.h"
#include "SWGHotelReservationBookingInfo.h"
#include "SWGHotelRoom.h"
#include "SWGHotelSearchResponse.h"
#include "SWGImage.h"
#include "SWGImageSize.h"
#include "SWGInfant.h"
#include "SWGLink.h"
#include "SWGLocationResponse.h"
#include "SWGLogos.h"
#include "SWGLowFareSearchResponse.h"
#include "SWGLowFareSearchResult.h"
#include "SWGMessage.h"
#include "SWGNearestAirport.h"
#include "SWGOtherReservation.h"
#include "SWGOtherReservationBookingInfo.h"
#include "SWGPeriodRate.h"
#include "SWGPointOfInterestCity.h"
#include "SWGPointOfInterestDetails.h"
#include "SWGPointOfInterestResult.h"
#include "SWGPointOfInterestResult_grades.h"
#include "SWGPointsOfInterestResponse.h"
#include "SWGRailService.h"
#include "SWGRailStationAutocompleteResponse.h"
#include "SWGRailStationResponse.h"
#include "SWGRate.h"
#include "SWGReservation.h"
#include "SWGRestrictedRate.h"
#include "SWGRoomInfo.h"
#include "SWGStation.h"
#include "SWGTopDestinationsSearchResponse.h"
#include "SWGTopDestinationsSearchResult.h"
#include "SWGTopSearchesSearchResponse.h"
#include "SWGTopSearchesSearchResult.h"
#include "SWGTrainScheduleSearchResponse.h"
#include "SWGTrainScheduleSearchResult.h"
#include "SWGTrainSearchItinerary.h"
#include "SWGTrainSearchPricing.h"
#include "SWGTrainSearchSegment.h"
#include "SWGTravelRecordHeader.h"
#include "SWGTravelRecordResponse.h"
#include "SWGTraveler.h"
#include "SWGVehicle.h"
#include "SWGVehicleInfo.h"

namespace Swagger {
  inline void* create(QString type) {
    if(QString("SWGAddress").compare(type) == 0) {
      return new SWGAddress();
    }
    if(QString("SWGAffiliateFlightSearchPrice").compare(type) == 0) {
      return new SWGAffiliateFlightSearchPrice();
    }
    if(QString("SWGAffiliatePayout").compare(type) == 0) {
      return new SWGAffiliatePayout();
    }
    if(QString("SWGAffiliateSearchMeta").compare(type) == 0) {
      return new SWGAffiliateSearchMeta();
    }
    if(QString("SWGAffiliateSearchResponse").compare(type) == 0) {
      return new SWGAffiliateSearchResponse();
    }
    if(QString("SWGAffiliateSearchResult").compare(type) == 0) {
      return new SWGAffiliateSearchResult();
    }
    if(QString("SWGAirport").compare(type) == 0) {
      return new SWGAirport();
    }
    if(QString("SWGAirportAutocompleteResponse").compare(type) == 0) {
      return new SWGAirportAutocompleteResponse();
    }
    if(QString("SWGAirportInformation").compare(type) == 0) {
      return new SWGAirportInformation();
    }
    if(QString("SWGAmenity").compare(type) == 0) {
      return new SWGAmenity();
    }
    if(QString("SWGAmount").compare(type) == 0) {
      return new SWGAmount();
    }
    if(QString("SWGAward").compare(type) == 0) {
      return new SWGAward();
    }
    if(QString("SWGCarReservation").compare(type) == 0) {
      return new SWGCarReservation();
    }
    if(QString("SWGCarReservationBookingInfo").compare(type) == 0) {
      return new SWGCarReservationBookingInfo();
    }
    if(QString("SWGCarSearchResponse").compare(type) == 0) {
      return new SWGCarSearchResponse();
    }
    if(QString("SWGCarSearchResult").compare(type) == 0) {
      return new SWGCarSearchResult();
    }
    if(QString("SWGCarrierInfo").compare(type) == 0) {
      return new SWGCarrierInfo();
    }
    if(QString("SWGCarrierMeta").compare(type) == 0) {
      return new SWGCarrierMeta();
    }
    if(QString("SWGCityInformation").compare(type) == 0) {
      return new SWGCityInformation();
    }
    if(QString("SWGCompany").compare(type) == 0) {
      return new SWGCompany();
    }
    if(QString("SWGContact").compare(type) == 0) {
      return new SWGContact();
    }
    if(QString("SWGError").compare(type) == 0) {
      return new SWGError();
    }
    if(QString("SWGExtensiveTrainSearchResponse").compare(type) == 0) {
      return new SWGExtensiveTrainSearchResponse();
    }
    if(QString("SWGExtensiveTrainSearchResult").compare(type) == 0) {
      return new SWGExtensiveTrainSearchResult();
    }
    if(QString("SWGExtremeSearchResponse").compare(type) == 0) {
      return new SWGExtremeSearchResponse();
    }
    if(QString("SWGExtremeSearchResult").compare(type) == 0) {
      return new SWGExtremeSearchResult();
    }
    if(QString("SWGFare").compare(type) == 0) {
      return new SWGFare();
    }
    if(QString("SWGFareRestrictions").compare(type) == 0) {
      return new SWGFareRestrictions();
    }
    if(QString("SWGFees").compare(type) == 0) {
      return new SWGFees();
    }
    if(QString("SWGFlightReservationBookingInfo").compare(type) == 0) {
      return new SWGFlightReservationBookingInfo();
    }
    if(QString("SWGFlightReservationBound").compare(type) == 0) {
      return new SWGFlightReservationBound();
    }
    if(QString("SWGFlightReservationSegment").compare(type) == 0) {
      return new SWGFlightReservationSegment();
    }
    if(QString("SWGFlightSearchBookingInfo").compare(type) == 0) {
      return new SWGFlightSearchBookingInfo();
    }
    if(QString("SWGFlightSearchBound").compare(type) == 0) {
      return new SWGFlightSearchBound();
    }
    if(QString("SWGFlightSearchItinerary").compare(type) == 0) {
      return new SWGFlightSearchItinerary();
    }
    if(QString("SWGFlightSearchPrice").compare(type) == 0) {
      return new SWGFlightSearchPrice();
    }
    if(QString("SWGFlightSearchSegment").compare(type) == 0) {
      return new SWGFlightSearchSegment();
    }
    if(QString("SWGFlightTicket").compare(type) == 0) {
      return new SWGFlightTicket();
    }
    if(QString("SWGFlightTrafficSearchResponse").compare(type) == 0) {
      return new SWGFlightTrafficSearchResponse();
    }
    if(QString("SWGFlightTrafficSearchResult").compare(type) == 0) {
      return new SWGFlightTrafficSearchResult();
    }
    if(QString("SWGFrequentTravelerCard").compare(type) == 0) {
      return new SWGFrequentTravelerCard();
    }
    if(QString("SWGGeolocation").compare(type) == 0) {
      return new SWGGeolocation();
    }
    if(QString("SWGHotelPropertyResponse").compare(type) == 0) {
      return new SWGHotelPropertyResponse();
    }
    if(QString("SWGHotelReservation").compare(type) == 0) {
      return new SWGHotelReservation();
    }
    if(QString("SWGHotelReservationBookingInfo").compare(type) == 0) {
      return new SWGHotelReservationBookingInfo();
    }
    if(QString("SWGHotelRoom").compare(type) == 0) {
      return new SWGHotelRoom();
    }
    if(QString("SWGHotelSearchResponse").compare(type) == 0) {
      return new SWGHotelSearchResponse();
    }
    if(QString("SWGImage").compare(type) == 0) {
      return new SWGImage();
    }
    if(QString("SWGImageSize").compare(type) == 0) {
      return new SWGImageSize();
    }
    if(QString("SWGInfant").compare(type) == 0) {
      return new SWGInfant();
    }
    if(QString("SWGLink").compare(type) == 0) {
      return new SWGLink();
    }
    if(QString("SWGLocationResponse").compare(type) == 0) {
      return new SWGLocationResponse();
    }
    if(QString("SWGLogos").compare(type) == 0) {
      return new SWGLogos();
    }
    if(QString("SWGLowFareSearchResponse").compare(type) == 0) {
      return new SWGLowFareSearchResponse();
    }
    if(QString("SWGLowFareSearchResult").compare(type) == 0) {
      return new SWGLowFareSearchResult();
    }
    if(QString("SWGMessage").compare(type) == 0) {
      return new SWGMessage();
    }
    if(QString("SWGNearestAirport").compare(type) == 0) {
      return new SWGNearestAirport();
    }
    if(QString("SWGOtherReservation").compare(type) == 0) {
      return new SWGOtherReservation();
    }
    if(QString("SWGOtherReservationBookingInfo").compare(type) == 0) {
      return new SWGOtherReservationBookingInfo();
    }
    if(QString("SWGPeriodRate").compare(type) == 0) {
      return new SWGPeriodRate();
    }
    if(QString("SWGPointOfInterestCity").compare(type) == 0) {
      return new SWGPointOfInterestCity();
    }
    if(QString("SWGPointOfInterestDetails").compare(type) == 0) {
      return new SWGPointOfInterestDetails();
    }
    if(QString("SWGPointOfInterestResult").compare(type) == 0) {
      return new SWGPointOfInterestResult();
    }
    if(QString("SWGPointOfInterestResult_grades").compare(type) == 0) {
      return new SWGPointOfInterestResult_grades();
    }
    if(QString("SWGPointsOfInterestResponse").compare(type) == 0) {
      return new SWGPointsOfInterestResponse();
    }
    if(QString("SWGRailService").compare(type) == 0) {
      return new SWGRailService();
    }
    if(QString("SWGRailStationAutocompleteResponse").compare(type) == 0) {
      return new SWGRailStationAutocompleteResponse();
    }
    if(QString("SWGRailStationResponse").compare(type) == 0) {
      return new SWGRailStationResponse();
    }
    if(QString("SWGRate").compare(type) == 0) {
      return new SWGRate();
    }
    if(QString("SWGReservation").compare(type) == 0) {
      return new SWGReservation();
    }
    if(QString("SWGRestrictedRate").compare(type) == 0) {
      return new SWGRestrictedRate();
    }
    if(QString("SWGRoomInfo").compare(type) == 0) {
      return new SWGRoomInfo();
    }
    if(QString("SWGStation").compare(type) == 0) {
      return new SWGStation();
    }
    if(QString("SWGTopDestinationsSearchResponse").compare(type) == 0) {
      return new SWGTopDestinationsSearchResponse();
    }
    if(QString("SWGTopDestinationsSearchResult").compare(type) == 0) {
      return new SWGTopDestinationsSearchResult();
    }
    if(QString("SWGTopSearchesSearchResponse").compare(type) == 0) {
      return new SWGTopSearchesSearchResponse();
    }
    if(QString("SWGTopSearchesSearchResult").compare(type) == 0) {
      return new SWGTopSearchesSearchResult();
    }
    if(QString("SWGTrainScheduleSearchResponse").compare(type) == 0) {
      return new SWGTrainScheduleSearchResponse();
    }
    if(QString("SWGTrainScheduleSearchResult").compare(type) == 0) {
      return new SWGTrainScheduleSearchResult();
    }
    if(QString("SWGTrainSearchItinerary").compare(type) == 0) {
      return new SWGTrainSearchItinerary();
    }
    if(QString("SWGTrainSearchPricing").compare(type) == 0) {
      return new SWGTrainSearchPricing();
    }
    if(QString("SWGTrainSearchSegment").compare(type) == 0) {
      return new SWGTrainSearchSegment();
    }
    if(QString("SWGTravelRecordHeader").compare(type) == 0) {
      return new SWGTravelRecordHeader();
    }
    if(QString("SWGTravelRecordResponse").compare(type) == 0) {
      return new SWGTravelRecordResponse();
    }
    if(QString("SWGTraveler").compare(type) == 0) {
      return new SWGTraveler();
    }
    if(QString("SWGVehicle").compare(type) == 0) {
      return new SWGVehicle();
    }
    if(QString("SWGVehicleInfo").compare(type) == 0) {
      return new SWGVehicleInfo();
    }
    
    return NULL;
  }

  inline void* create(QString json, QString type) {
    void* val = create(type);
    if(val != NULL) {
      SWGObject* obj = static_cast<SWGObject*>(val);
      return obj->fromJson(json);
    }
    if(type.startsWith("QString")) {
      return new QString();
    }
    return NULL;
  }
} /* namespace Swagger */

#endif /* ModelFactory_H_ */
