/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGHotelRoom.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGHotelRoom::SWGHotelRoom(QString* json) {
    init();
    this->fromJson(*json);
}

SWGHotelRoom::SWGHotelRoom() {
    init();
}

SWGHotelRoom::~SWGHotelRoom() {
    this->cleanup();
}

void
SWGHotelRoom::init() {
    booking_code = new QString("");
room_type_code = new QString("");
rate_plan_code = new QString("");
total_amount = new SWGAmount();
rates = new QList<SWGPeriodRate*>();
descriptions = new QList<QString*>();
room_type_info = new SWGRoomInfo();
rate_type_code = new QString("");
}

void
SWGHotelRoom::cleanup() {
    if(booking_code != NULL) {
        delete booking_code;
    }
if(room_type_code != NULL) {
        delete room_type_code;
    }
if(rate_plan_code != NULL) {
        delete rate_plan_code;
    }
if(total_amount != NULL) {
        delete total_amount;
    }
if(rates != NULL) {
        QList<SWGPeriodRate*>* arr = rates;
        foreach(SWGPeriodRate* o, *arr) {
            delete o;
        }
        delete rates;
    }
if(descriptions != NULL) {
        QList<QString*>* arr = descriptions;
        foreach(QString* o, *arr) {
            delete o;
        }
        delete descriptions;
    }
if(room_type_info != NULL) {
        delete room_type_info;
    }
if(rate_type_code != NULL) {
        delete rate_type_code;
    }
}

SWGHotelRoom*
SWGHotelRoom::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGHotelRoom::fromJsonObject(QJsonObject &pJson) {
    setValue(&booking_code, pJson["booking_code"], "QString", "QString");
setValue(&room_type_code, pJson["room_type_code"], "QString", "QString");
setValue(&rate_plan_code, pJson["rate_plan_code"], "QString", "QString");
setValue(&total_amount, pJson["total_amount"], "SWGAmount", "SWGAmount");
setValue(&rates, pJson["rates"], "QList", "SWGPeriodRate");
setValue(&descriptions, pJson["descriptions"], "QList", "QString");
setValue(&room_type_info, pJson["room_type_info"], "SWGRoomInfo", "SWGRoomInfo");
setValue(&rate_type_code, pJson["rate_type_code"], "QString", "QString");
}

QString
SWGHotelRoom::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGHotelRoom::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("booking_code"), booking_code, obj, QString("QString"));
    
        

    
    toJsonValue(QString("room_type_code"), room_type_code, obj, QString("QString"));
    
        

    
    toJsonValue(QString("rate_plan_code"), rate_plan_code, obj, QString("QString"));
    
        

    
    toJsonValue(QString("total_amount"), total_amount, obj, QString("SWGAmount"));
    
        

    
    QList<SWGPeriodRate*>* ratesList = rates;
    QJsonArray ratesJsonArray;
    toJsonArray((QList<void*>*)rates, &ratesJsonArray, "rates", "SWGPeriodRate");

    obj->insert("rates", ratesJsonArray);
    

    
    QList<QString*>* descriptionsList = descriptions;
    QJsonArray descriptionsJsonArray;
    toJsonArray((QList<void*>*)descriptions, &descriptionsJsonArray, "descriptions", "QString");

    obj->insert("descriptions", descriptionsJsonArray);
    

    
    toJsonValue(QString("room_type_info"), room_type_info, obj, QString("SWGRoomInfo"));
    
        

    
    toJsonValue(QString("rate_type_code"), rate_type_code, obj, QString("QString"));
    
        

    return obj;
}

QString*
SWGHotelRoom::getBookingCode() {
    return booking_code;
}
void
SWGHotelRoom::setBookingCode(QString* booking_code) {
    this->booking_code = booking_code;
}

QString*
SWGHotelRoom::getRoomTypeCode() {
    return room_type_code;
}
void
SWGHotelRoom::setRoomTypeCode(QString* room_type_code) {
    this->room_type_code = room_type_code;
}

QString*
SWGHotelRoom::getRatePlanCode() {
    return rate_plan_code;
}
void
SWGHotelRoom::setRatePlanCode(QString* rate_plan_code) {
    this->rate_plan_code = rate_plan_code;
}

SWGAmount*
SWGHotelRoom::getTotalAmount() {
    return total_amount;
}
void
SWGHotelRoom::setTotalAmount(SWGAmount* total_amount) {
    this->total_amount = total_amount;
}

QList<SWGPeriodRate*>*
SWGHotelRoom::getRates() {
    return rates;
}
void
SWGHotelRoom::setRates(QList<SWGPeriodRate*>* rates) {
    this->rates = rates;
}

QList<QString*>*
SWGHotelRoom::getDescriptions() {
    return descriptions;
}
void
SWGHotelRoom::setDescriptions(QList<QString*>* descriptions) {
    this->descriptions = descriptions;
}

SWGRoomInfo*
SWGHotelRoom::getRoomTypeInfo() {
    return room_type_info;
}
void
SWGHotelRoom::setRoomTypeInfo(SWGRoomInfo* room_type_info) {
    this->room_type_info = room_type_info;
}

QString*
SWGHotelRoom::getRateTypeCode() {
    return rate_type_code;
}
void
SWGHotelRoom::setRateTypeCode(QString* rate_type_code) {
    this->rate_type_code = rate_type_code;
}



} /* namespace Swagger */

