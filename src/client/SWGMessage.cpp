/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGMessage.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGMessage::SWGMessage(QString* json) {
    init();
    this->fromJson(*json);
}

SWGMessage::SWGMessage() {
    init();
}

SWGMessage::~SWGMessage() {
    this->cleanup();
}

void
SWGMessage::init() {
    severity = new QString("");
type = new QString("");
message = new QString("");
}

void
SWGMessage::cleanup() {
    if(severity != NULL) {
        delete severity;
    }
if(type != NULL) {
        delete type;
    }
if(message != NULL) {
        delete message;
    }
}

SWGMessage*
SWGMessage::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGMessage::fromJsonObject(QJsonObject &pJson) {
    setValue(&severity, pJson["severity"], "QString", "QString");
setValue(&type, pJson["type"], "QString", "QString");
setValue(&message, pJson["message"], "QString", "QString");
}

QString
SWGMessage::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGMessage::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("severity"), severity, obj, QString("QString"));
    
        

    
    toJsonValue(QString("type"), type, obj, QString("QString"));
    
        

    
    toJsonValue(QString("message"), message, obj, QString("QString"));
    
        

    return obj;
}

QString*
SWGMessage::getSeverity() {
    return severity;
}
void
SWGMessage::setSeverity(QString* severity) {
    this->severity = severity;
}

QString*
SWGMessage::getType() {
    return type;
}
void
SWGMessage::setType(QString* type) {
    this->type = type;
}

QString*
SWGMessage::getMessage() {
    return message;
}
void
SWGMessage::setMessage(QString* message) {
    this->message = message;
}



} /* namespace Swagger */

