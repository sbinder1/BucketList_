/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGOtherReservation.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGOtherReservation::SWGOtherReservation(QString* json) {
    init();
    this->fromJson(*json);
}

SWGOtherReservation::SWGOtherReservation() {
    init();
}

SWGOtherReservation::~SWGOtherReservation() {
    this->cleanup();
}

void
SWGOtherReservation::init() {
    id = new QString("");
date = NULL;
location = new QString("");
description = new QString("");
traveler_ids = new QList<QString*>();
booking_info = new SWGOtherReservationBookingInfo();
}

void
SWGOtherReservation::cleanup() {
    if(id != NULL) {
        delete id;
    }
if(date != NULL) {
        delete date;
    }
if(location != NULL) {
        delete location;
    }
if(description != NULL) {
        delete description;
    }
if(traveler_ids != NULL) {
        QList<QString*>* arr = traveler_ids;
        foreach(QString* o, *arr) {
            delete o;
        }
        delete traveler_ids;
    }
if(booking_info != NULL) {
        delete booking_info;
    }
}

SWGOtherReservation*
SWGOtherReservation::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGOtherReservation::fromJsonObject(QJsonObject &pJson) {
    setValue(&id, pJson["id"], "QString", "QString");
setValue(&date, pJson["date"], "QDate", "QDate");
setValue(&location, pJson["location"], "QString", "QString");
setValue(&description, pJson["description"], "QString", "QString");
setValue(&traveler_ids, pJson["traveler_ids"], "QList", "QString");
setValue(&booking_info, pJson["booking_info"], "SWGOtherReservationBookingInfo", "SWGOtherReservationBookingInfo");
}

QString
SWGOtherReservation::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGOtherReservation::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("id"), id, obj, QString("QString"));
    
        

    
    toJsonValue(QString("date"), date, obj, QString("QDate"));
    
        

    
    toJsonValue(QString("location"), location, obj, QString("QString"));
    
        

    
    toJsonValue(QString("description"), description, obj, QString("QString"));
    
        

    
    QList<QString*>* traveler_idsList = traveler_ids;
    QJsonArray traveler_idsJsonArray;
    toJsonArray((QList<void*>*)traveler_ids, &traveler_idsJsonArray, "traveler_ids", "QString");

    obj->insert("traveler_ids", traveler_idsJsonArray);
    

    
    toJsonValue(QString("booking_info"), booking_info, obj, QString("SWGOtherReservationBookingInfo"));
    
        

    return obj;
}

QString*
SWGOtherReservation::getId() {
    return id;
}
void
SWGOtherReservation::setId(QString* id) {
    this->id = id;
}

QDate*
SWGOtherReservation::getDate() {
    return date;
}
void
SWGOtherReservation::setDate(QDate* date) {
    this->date = date;
}

QString*
SWGOtherReservation::getLocation() {
    return location;
}
void
SWGOtherReservation::setLocation(QString* location) {
    this->location = location;
}

QString*
SWGOtherReservation::getDescription() {
    return description;
}
void
SWGOtherReservation::setDescription(QString* description) {
    this->description = description;
}

QList<QString*>*
SWGOtherReservation::getTravelerIds() {
    return traveler_ids;
}
void
SWGOtherReservation::setTravelerIds(QList<QString*>* traveler_ids) {
    this->traveler_ids = traveler_ids;
}

SWGOtherReservationBookingInfo*
SWGOtherReservation::getBookingInfo() {
    return booking_info;
}
void
SWGOtherReservation::setBookingInfo(SWGOtherReservationBookingInfo* booking_info) {
    this->booking_info = booking_info;
}



} /* namespace Swagger */

