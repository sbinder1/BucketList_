/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGGeolocation.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGGeolocation::SWGGeolocation(QString* json) {
    init();
    this->fromJson(*json);
}

SWGGeolocation::SWGGeolocation() {
    init();
}

SWGGeolocation::~SWGGeolocation() {
    this->cleanup();
}

void
SWGGeolocation::init() {
    latitude = 0.0;
longitude = 0.0;
google_maps_link = new QString("");
}

void
SWGGeolocation::cleanup() {
    if(latitude != NULL) {
        delete latitude;
    }
if(longitude != NULL) {
        delete longitude;
    }
if(google_maps_link != NULL) {
        delete google_maps_link;
    }
}

SWGGeolocation*
SWGGeolocation::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGGeolocation::fromJsonObject(QJsonObject &pJson) {
    setValue(&latitude, pJson["latitude"], "SWGNumber", "SWGNumber");
setValue(&longitude, pJson["longitude"], "SWGNumber", "SWGNumber");
setValue(&google_maps_link, pJson["google_maps_link"], "QString", "QString");
}

QString
SWGGeolocation::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGGeolocation::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("latitude"), latitude, obj, QString("SWGNumber"));
    
        

    
    toJsonValue(QString("longitude"), longitude, obj, QString("SWGNumber"));
    
        

    
    toJsonValue(QString("google_maps_link"), google_maps_link, obj, QString("QString"));
    
        

    return obj;
}

SWGNumber*
SWGGeolocation::getLatitude() {
    return latitude;
}
void
SWGGeolocation::setLatitude(SWGNumber* latitude) {
    this->latitude = latitude;
}

SWGNumber*
SWGGeolocation::getLongitude() {
    return longitude;
}
void
SWGGeolocation::setLongitude(SWGNumber* longitude) {
    this->longitude = longitude;
}

QString*
SWGGeolocation::getGoogleMapsLink() {
    return google_maps_link;
}
void
SWGGeolocation::setGoogleMapsLink(QString* google_maps_link) {
    this->google_maps_link = google_maps_link;
}



} /* namespace Swagger */

