/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGPointsOfInterestResponse.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGPointsOfInterestResponse::SWGPointsOfInterestResponse(QString* json) {
    init();
    this->fromJson(*json);
}

SWGPointsOfInterestResponse::SWGPointsOfInterestResponse() {
    init();
}

SWGPointsOfInterestResponse::~SWGPointsOfInterestResponse() {
    this->cleanup();
}

void
SWGPointsOfInterestResponse::init() {
    current_city = new SWGPointOfInterestCity();
points_of_interest = new QList<SWGPointOfInterestResult*>();
}

void
SWGPointsOfInterestResponse::cleanup() {
    if(current_city != NULL) {
        delete current_city;
    }
if(points_of_interest != NULL) {
        QList<SWGPointOfInterestResult*>* arr = points_of_interest;
        foreach(SWGPointOfInterestResult* o, *arr) {
            delete o;
        }
        delete points_of_interest;
    }
}

SWGPointsOfInterestResponse*
SWGPointsOfInterestResponse::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGPointsOfInterestResponse::fromJsonObject(QJsonObject &pJson) {
    setValue(&current_city, pJson["current_city"], "SWGPointOfInterestCity", "SWGPointOfInterestCity");
setValue(&points_of_interest, pJson["points_of_interest"], "QList", "SWGPointOfInterestResult");
}

QString
SWGPointsOfInterestResponse::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGPointsOfInterestResponse::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("current_city"), current_city, obj, QString("SWGPointOfInterestCity"));
    
        

    
    QList<SWGPointOfInterestResult*>* points_of_interestList = points_of_interest;
    QJsonArray points_of_interestJsonArray;
    toJsonArray((QList<void*>*)points_of_interest, &points_of_interestJsonArray, "points_of_interest", "SWGPointOfInterestResult");

    obj->insert("points_of_interest", points_of_interestJsonArray);
    

    return obj;
}

SWGPointOfInterestCity*
SWGPointsOfInterestResponse::getCurrentCity() {
    return current_city;
}
void
SWGPointsOfInterestResponse::setCurrentCity(SWGPointOfInterestCity* current_city) {
    this->current_city = current_city;
}

QList<SWGPointOfInterestResult*>*
SWGPointsOfInterestResponse::getPointsOfInterest() {
    return points_of_interest;
}
void
SWGPointsOfInterestResponse::setPointsOfInterest(QList<SWGPointOfInterestResult*>* points_of_interest) {
    this->points_of_interest = points_of_interest;
}



} /* namespace Swagger */

