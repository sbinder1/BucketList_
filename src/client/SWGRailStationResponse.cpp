/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGRailStationResponse.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGRailStationResponse::SWGRailStationResponse(QString* json) {
    init();
    this->fromJson(*json);
}

SWGRailStationResponse::SWGRailStationResponse() {
    init();
}

SWGRailStationResponse::~SWGRailStationResponse() {
    this->cleanup();
}

void
SWGRailStationResponse::init() {
    id = new QString("");
type = new QString("");
name = new QString("");
short_name = new QString("");
country = new QString("");
location = new SWGGeolocation();
traffic = new QString("");
}

void
SWGRailStationResponse::cleanup() {
    if(id != NULL) {
        delete id;
    }
if(type != NULL) {
        delete type;
    }
if(name != NULL) {
        delete name;
    }
if(short_name != NULL) {
        delete short_name;
    }
if(country != NULL) {
        delete country;
    }
if(location != NULL) {
        delete location;
    }
if(traffic != NULL) {
        delete traffic;
    }
}

SWGRailStationResponse*
SWGRailStationResponse::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGRailStationResponse::fromJsonObject(QJsonObject &pJson) {
    setValue(&id, pJson["id"], "QString", "QString");
setValue(&type, pJson["type"], "QString", "QString");
setValue(&name, pJson["name"], "QString", "QString");
setValue(&short_name, pJson["short_name"], "QString", "QString");
setValue(&country, pJson["country"], "QString", "QString");
setValue(&location, pJson["location"], "SWGGeolocation", "SWGGeolocation");
setValue(&traffic, pJson["traffic"], "QString", "QString");
}

QString
SWGRailStationResponse::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGRailStationResponse::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("id"), id, obj, QString("QString"));
    
        

    
    toJsonValue(QString("type"), type, obj, QString("QString"));
    
        

    
    toJsonValue(QString("name"), name, obj, QString("QString"));
    
        

    
    toJsonValue(QString("short_name"), short_name, obj, QString("QString"));
    
        

    
    toJsonValue(QString("country"), country, obj, QString("QString"));
    
        

    
    toJsonValue(QString("location"), location, obj, QString("SWGGeolocation"));
    
        

    
    toJsonValue(QString("traffic"), traffic, obj, QString("QString"));
    
        

    return obj;
}

QString*
SWGRailStationResponse::getId() {
    return id;
}
void
SWGRailStationResponse::setId(QString* id) {
    this->id = id;
}

QString*
SWGRailStationResponse::getType() {
    return type;
}
void
SWGRailStationResponse::setType(QString* type) {
    this->type = type;
}

QString*
SWGRailStationResponse::getName() {
    return name;
}
void
SWGRailStationResponse::setName(QString* name) {
    this->name = name;
}

QString*
SWGRailStationResponse::getShortName() {
    return short_name;
}
void
SWGRailStationResponse::setShortName(QString* short_name) {
    this->short_name = short_name;
}

QString*
SWGRailStationResponse::getCountry() {
    return country;
}
void
SWGRailStationResponse::setCountry(QString* country) {
    this->country = country;
}

SWGGeolocation*
SWGRailStationResponse::getLocation() {
    return location;
}
void
SWGRailStationResponse::setLocation(SWGGeolocation* location) {
    this->location = location;
}

QString*
SWGRailStationResponse::getTraffic() {
    return traffic;
}
void
SWGRailStationResponse::setTraffic(QString* traffic) {
    this->traffic = traffic;
}



} /* namespace Swagger */

