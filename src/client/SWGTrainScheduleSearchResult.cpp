/**
 * Amadeus Travel Innovation Sandbox
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGTrainScheduleSearchResult.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGTrainScheduleSearchResult::SWGTrainScheduleSearchResult(QString* json) {
    init();
    this->fromJson(*json);
}

SWGTrainScheduleSearchResult::SWGTrainScheduleSearchResult() {
    init();
}

SWGTrainScheduleSearchResult::~SWGTrainScheduleSearchResult() {
    this->cleanup();
}

void
SWGTrainScheduleSearchResult::init() {
    origin_station_id = new QString("");
date = NULL;
services = new QList<SWGRailService*>();
}

void
SWGTrainScheduleSearchResult::cleanup() {
    if(origin_station_id != NULL) {
        delete origin_station_id;
    }
if(date != NULL) {
        delete date;
    }
if(services != NULL) {
        QList<SWGRailService*>* arr = services;
        foreach(SWGRailService* o, *arr) {
            delete o;
        }
        delete services;
    }
}

SWGTrainScheduleSearchResult*
SWGTrainScheduleSearchResult::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGTrainScheduleSearchResult::fromJsonObject(QJsonObject &pJson) {
    setValue(&origin_station_id, pJson["origin_station_id"], "QString", "QString");
setValue(&date, pJson["date"], "QDate", "QDate");
setValue(&services, pJson["services"], "QList", "SWGRailService");
}

QString
SWGTrainScheduleSearchResult::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGTrainScheduleSearchResult::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("origin_station_id"), origin_station_id, obj, QString("QString"));
    
        

    
    toJsonValue(QString("date"), date, obj, QString("QDate"));
    
        

    
    QList<SWGRailService*>* servicesList = services;
    QJsonArray servicesJsonArray;
    toJsonArray((QList<void*>*)services, &servicesJsonArray, "services", "SWGRailService");

    obj->insert("services", servicesJsonArray);
    

    return obj;
}

QString*
SWGTrainScheduleSearchResult::getOriginStationId() {
    return origin_station_id;
}
void
SWGTrainScheduleSearchResult::setOriginStationId(QString* origin_station_id) {
    this->origin_station_id = origin_station_id;
}

QDate*
SWGTrainScheduleSearchResult::getDate() {
    return date;
}
void
SWGTrainScheduleSearchResult::setDate(QDate* date) {
    this->date = date;
}

QList<SWGRailService*>*
SWGTrainScheduleSearchResult::getServices() {
    return services;
}
void
SWGTrainScheduleSearchResult::setServices(QList<SWGRailService*>* services) {
    this->services = services;
}



} /* namespace Swagger */

